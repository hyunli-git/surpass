import {notFound} from 'next/navigation';
import {getRequestConfig} from 'next-intl/server';
 
// Can be imported from a shared config
export const locales = ['en', 'ko', 'ja', 'zh', 'es', 'fr', 'de', 'pt', 'it', 'ru', 'ar'] as const;
export type Locale = typeof locales[number];

export const defaultLocale = 'en' as const;

export const localeNames: Record<Locale, string> = {
  en: 'English',
  ko: 'ÌïúÍµ≠Ïñ¥',
  ja: 'Êó•Êú¨Ë™û', 
  zh: '‰∏≠Êñá',
  es: 'Espa√±ol',
  fr: 'Fran√ßais',
  de: 'Deutsch',
  pt: 'Portugu√™s',
  it: 'Italiano',
  ru: '–†—É—Å—Å–∫–∏–π',
  ar: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©'
};

export const localeFlags: Record<Locale, string> = {
  en: 'üá∫üá∏',
  ko: 'üá∞üá∑',
  ja: 'üáØüáµ',
  zh: 'üá®üá≥', 
  es: 'üá™üá∏',
  fr: 'üá´üá∑',
  de: 'üá©üá™',
  pt: 'üáµüáπ',
  it: 'üáÆüáπ',
  ru: 'üá∑üá∫',
  ar: 'üá∏üá¶'
};
 
export default getRequestConfig(async ({locale}) => {
  // Validate that the incoming `locale` parameter is valid
  if (!locale || !locales.includes(locale as Locale)) {
    notFound();
  }
 
  return {
    messages: (await import(`../messages/${locale}.json`)).default,
    locale: locale as string
  };
});